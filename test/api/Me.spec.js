/**
 * OrderCloud
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * Contact: ordercloud@four51.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OrderCloud);
  }
}(this, function(expect, OrderCloud) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OrderCloud.Me();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Me', function() {
    describe('CreateAddress', function() {
      it('should call CreateAddress successfully', function(done) {
        //uncomment below and update the code to test CreateAddress
        //instance.CreateAddress(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('CreateCreditCard', function() {
      it('should call CreateCreditCard successfully', function(done) {
        //uncomment below and update the code to test CreateCreditCard
        //instance.CreateCreditCard(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('CreateFromTempUser', function() {
      it('should call CreateFromTempUser successfully', function(done) {
        //uncomment below and update the code to test CreateFromTempUser
        //instance.CreateFromTempUser(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('DeleteAddress', function() {
      it('should call DeleteAddress successfully', function(done) {
        //uncomment below and update the code to test DeleteAddress
        //instance.DeleteAddress(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('DeleteCreditCard', function() {
      it('should call DeleteCreditCard successfully', function(done) {
        //uncomment below and update the code to test DeleteCreditCard
        //instance.DeleteCreditCard(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('Get', function() {
      it('should call Get successfully', function(done) {
        //uncomment below and update the code to test Get
        //instance.Get(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('GetAddress', function() {
      it('should call GetAddress successfully', function(done) {
        //uncomment below and update the code to test GetAddress
        //instance.GetAddress(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('GetCreditCard', function() {
      it('should call GetCreditCard successfully', function(done) {
        //uncomment below and update the code to test GetCreditCard
        //instance.GetCreditCard(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('GetProduct', function() {
      it('should call GetProduct successfully', function(done) {
        //uncomment below and update the code to test GetProduct
        //instance.GetProduct(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('GetPromotion', function() {
      it('should call GetPromotion successfully', function(done) {
        //uncomment below and update the code to test GetPromotion
        //instance.GetPromotion(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('GetShipment', function() {
      it('should call GetShipment successfully', function(done) {
        //uncomment below and update the code to test GetShipment
        //instance.GetShipment(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('GetSpec', function() {
      it('should call GetSpec successfully', function(done) {
        //uncomment below and update the code to test GetSpec
        //instance.GetSpec(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('GetSpendingAccount', function() {
      it('should call GetSpendingAccount successfully', function(done) {
        //uncomment below and update the code to test GetSpendingAccount
        //instance.GetSpendingAccount(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListAddresses', function() {
      it('should call ListAddresses successfully', function(done) {
        //uncomment below and update the code to test ListAddresses
        //instance.ListAddresses(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListApprovableOrders', function() {
      it('should call ListApprovableOrders successfully', function(done) {
        //uncomment below and update the code to test ListApprovableOrders
        //instance.ListApprovableOrders(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListCategories', function() {
      it('should call ListCategories successfully', function(done) {
        //uncomment below and update the code to test ListCategories
        //instance.ListCategories(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListCostCenters', function() {
      it('should call ListCostCenters successfully', function(done) {
        //uncomment below and update the code to test ListCostCenters
        //instance.ListCostCenters(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListCreditCards', function() {
      it('should call ListCreditCards successfully', function(done) {
        //uncomment below and update the code to test ListCreditCards
        //instance.ListCreditCards(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListOrders', function() {
      it('should call ListOrders successfully', function(done) {
        //uncomment below and update the code to test ListOrders
        //instance.ListOrders(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListProducts', function() {
      it('should call ListProducts successfully', function(done) {
        //uncomment below and update the code to test ListProducts
        //instance.ListProducts(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListPromotions', function() {
      it('should call ListPromotions successfully', function(done) {
        //uncomment below and update the code to test ListPromotions
        //instance.ListPromotions(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListShipments', function() {
      it('should call ListShipments successfully', function(done) {
        //uncomment below and update the code to test ListShipments
        //instance.ListShipments(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListSpecs', function() {
      it('should call ListSpecs successfully', function(done) {
        //uncomment below and update the code to test ListSpecs
        //instance.ListSpecs(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListSpendingAccounts', function() {
      it('should call ListSpendingAccounts successfully', function(done) {
        //uncomment below and update the code to test ListSpendingAccounts
        //instance.ListSpendingAccounts(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ListUserGroups', function() {
      it('should call ListUserGroups successfully', function(done) {
        //uncomment below and update the code to test ListUserGroups
        //instance.ListUserGroups(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('Patch', function() {
      it('should call Patch successfully', function(done) {
        //uncomment below and update the code to test Patch
        //instance.Patch(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('PatchAddress', function() {
      it('should call PatchAddress successfully', function(done) {
        //uncomment below and update the code to test PatchAddress
        //instance.PatchAddress(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('PatchCreditCard', function() {
      it('should call PatchCreditCard successfully', function(done) {
        //uncomment below and update the code to test PatchCreditCard
        //instance.PatchCreditCard(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ResetPasswordByToken', function() {
      it('should call ResetPasswordByToken successfully', function(done) {
        //uncomment below and update the code to test ResetPasswordByToken
        //instance.ResetPasswordByToken(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('Update', function() {
      it('should call Update successfully', function(done) {
        //uncomment below and update the code to test Update
        //instance.Update(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('UpdateAddress', function() {
      it('should call UpdateAddress successfully', function(done) {
        //uncomment below and update the code to test UpdateAddress
        //instance.UpdateAddress(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('UpdateCreditCard', function() {
      it('should call UpdateCreditCard successfully', function(done) {
        //uncomment below and update the code to test UpdateCreditCard
        //instance.UpdateCreditCard(pet, function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
